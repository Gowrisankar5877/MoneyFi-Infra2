trigger:
  - main 

resources:
  - repo: self

variables:
  poolname: agentpool
  vmImageName: 'gowriAM'
  terraformWorkingDir: '.' 
  azureSubscription: '9d2931f3-e261-4c38-a081-22cd6b3df6e8'
  aksCentralName: MoneyFi-AKS1
  aksWestName: MoneyFi-aks2
  resourceGroupName: MoneyFi-RG
  
stages:
- stage: Terraform_Infra
  displayName: "Provision Infrastructure"
  jobs:
  - job: Terraform
    displayName: "Terraform Plan & Apply"
    pool:
      name: $(poolname)
      vmImage: $(vmImageName)
    steps:
    - checkout: self

    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Logged into Azure"

    - script: |
        cd $(terraformWorkingDir)
        terraform version
      displayName: 'Check Terraform Version'

    - script: |
        cd $(terraformWorkingDir)
        terraform init
      displayName: 'Terraform Init '

    - script: |
        cd $(terraformWorkingDir)
        terraform plan -var-file="terraform.tfvars" -out=tfplan
      displayName: 'Terraform Plan'

    - script: |
        cd $(terraformWorkingDir)
        terraform apply   -auto-approve tfplan
      displayName: 'Terraform Apply'
    

    - task: AzureCLI@2
      displayName: Enable CSI Driver on Central AKS
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az aks enable-addons \
          --addons azure-keyvault-secrets-provider \
          --name $(aksCentralName) \
          --resource-group $(resourceGroupName)

    - task: AzureCLI@2
      displayName: Enable CSI Driver on West AKS
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az aks enable-addons \
            --addons azure-keyvault-secrets-provider \
            --name $(aksWestName) \
            --resource-group $(resourceGroupName)

    - task: AzureCLI@2
      displayName: Get Credentials for Central AKS
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az aks get-credentials \
            --name $(aksCentralName) \
            --resource-group $(resourceGroupName) \
            --admin --overwrite-existing

    - script: |
        kubectl apply -f secretprovider.yaml
      displayName: Apply SecretProviderClass to Central AKS

    - task: AzureCLI@2
      displayName: Get Credentials for West AKS
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az aks get-credentials \
            --name $(aksWestName) \
            --resource-group $(resourceGroupName) \
            --admin --overwrite-existing

    - script: |
        kubectl apply -f secretprovider.yaml
      displayName: Apply SecretProviderClass to West AKS

    
